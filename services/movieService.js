/// =========================
// üìÇ movieService.js
// Servicio para leer y buscar pel√≠culas desde un archivo CSV
// =========================

// Importamos el m√≥dulo 'fs' (file system) de Node.js
// Usamos la versi√≥n con promesas para trabajar con async/await
const fs = require("fs").promises;

// =========================
// Funci√≥n: parseCsvLineToObject
// Convierte una l√≠nea CSV en un objeto JavaScript con propiedades claras
// =========================
function parseCsvLineToObject(line) {
    // Dividimos la l√≠nea por comas para obtener las columnas
    const columns = line.split(',');

    // Retornamos un objeto con los datos de la pel√≠cula
    return {
        id:       columns[0],
        title:    columns[1],
        year:     columns[2],
        genre:    columns[3],
        director: columns[4],
        actors:   columns[5],
        plot:     columns[6],
        imdb_rating: columns[7],
        runtime_minutes: columns[8]
    };
}

// =========================
// Funci√≥n: getMovieByTitle
// Busca una pel√≠cula por t√≠tulo en el archivo CSV
// =========================
async function getMovieByTitle(title) {
    try {
        // 1Ô∏è‚É£ Leer el archivo CSV en formato texto
        const data = await fs.readFile('data/movie.csv', 'utf8');

        // 2Ô∏è‚É£ Dividir el contenido por l√≠neas (cada l√≠nea es una pel√≠cula)
        const lines = data.split('\n');

        // 3Ô∏è‚É£ Ignorar la primera l√≠nea (encabezados) y buscar coincidencia
        const movieLine = lines.slice(1).find(line => 
            line.toLowerCase().includes(title.toLowerCase())
        );

        // 4Ô∏è‚É£ Si no se encuentra la pel√≠cula
        if (!movieLine) {
            console.log("üí¢ No se encontr√≥ la pel√≠cula: " + title);
            return null;
        }

        // 5Ô∏è‚É£ Convertir la l√≠nea encontrada a un objeto y devolverlo
        return parseCsvLineToObject(movieLine);

    } catch (err) {
        console.error('‚ùå Error al leer el archivo CSV:', err);
        return null;
    }
}

// =========================
// Exportamos las funciones para que otros archivos puedan usarlas
// =========================
module.exports = {
    getMovieByTitle
};
